1685309927
waR3U4bTeM%3Ae91048e927a67f351d7cc6932fba4c0f-f2fc4836e3284b6b0fc56768f6420b3c
s:18360:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImYyZmM0ODM2ZTMyODRiNmIwZmM1Njc2OGY2NDIwYjNjIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6Mjk6InRlYW0tbWVtYmVyLW1hbmFnZXIuYmxhZGUucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6NTE6InJlc291cmNlcy92aWV3cy90ZWFtcy90ZWFtLW1lbWJlci1tYW5hZ2VyLmJsYWRlLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MTI4MjE6IjxkaXY+CiAgICBAaWYgKEdhdGU6OmNoZWNrKCdhZGRUZWFtTWVtYmVyJywgJHRlYW0pKQogICAgICAgIDx4LWpldC1zZWN0aW9uLWJvcmRlciAvPgoKICAgICAgICA8IS0tIEFkZCBUZWFtIE1lbWJlciAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJtdC0xMCBzbTptdC0wIj4KICAgICAgICAgICAgPHgtamV0LWZvcm0tc2VjdGlvbiBzdWJtaXQ9ImFkZFRlYW1NZW1iZXIiPgogICAgICAgICAgICAgICAgPHgtc2xvdCBuYW1lPSJ0aXRsZSI+CiAgICAgICAgICAgICAgICAgICAge3sgX18oJ0FkZCBUZWFtIE1lbWJlcicpIH19CiAgICAgICAgICAgICAgICA8L3gtc2xvdD4KCiAgICAgICAgICAgICAgICA8eC1zbG90IG5hbWU9ImRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgICAgICB7eyBfXygnQWRkIGEgbmV3IHRlYW0gbWVtYmVyIHRvIHlvdXIgdGVhbSwgYWxsb3dpbmcgdGhlbSB0byBjb2xsYWJvcmF0ZSB3aXRoIHlvdS4nKSB9fQogICAgICAgICAgICAgICAgPC94LXNsb3Q+CgogICAgICAgICAgICAgICAgPHgtc2xvdCBuYW1lPSJmb3JtIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi02Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWF4LXcteGwgdGV4dC1zbSB0ZXh0LWdyYXktNjAwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IF9fKCdQbGVhc2UgcHJvdmlkZSB0aGUgZW1haWwgYWRkcmVzcyBvZiB0aGUgcGVyc29uIHlvdSB3b3VsZCBsaWtlIHRvIGFkZCB0byB0aGlzIHRlYW0uJykgfX0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwhLS0gTWVtYmVyIEVtYWlsIC0tPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTYgc206Y29sLXNwYW4tNCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx4LWpldC1sYWJlbCBmb3I9ImVtYWlsIiB2YWx1ZT0ie3sgX18oJ0VtYWlsJykgfX0iIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDx4LWpldC1pbnB1dCBpZD0iZW1haWwiIHR5cGU9ImVtYWlsIiBjbGFzcz0ibXQtMSBibG9jayB3LWZ1bGwiIHdpcmU6bW9kZWwuZGVmZXI9ImFkZFRlYW1NZW1iZXJGb3JtLmVtYWlsIiAvPgogICAgICAgICAgICAgICAgICAgICAgICA8eC1qZXQtaW5wdXQtZXJyb3IgZm9yPSJlbWFpbCIgY2xhc3M9Im10LTIiIC8+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwhLS0gUm9sZSAtLT4KICAgICAgICAgICAgICAgICAgICBAaWYgKGNvdW50KCR0aGlzLT5yb2xlcykgPiAwKQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi02IGxnOmNvbC1zcGFuLTQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHgtamV0LWxhYmVsIGZvcj0icm9sZSIgdmFsdWU9Int7IF9fKCdSb2xlJykgfX0iIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eC1qZXQtaW5wdXQtZXJyb3IgZm9yPSJyb2xlIiBjbGFzcz0ibXQtMiIgLz4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWxhdGl2ZSB6LTAgbXQtMSBib3JkZXIgYm9yZGVyLWdyYXktMjAwIHJvdW5kZWQtbGcgY3Vyc29yLXBvaW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBmb3JlYWNoICgkdGhpcy0+cm9sZXMgYXMgJGluZGV4ID0+ICRyb2xlKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9InJlbGF0aXZlIHB4LTQgcHktMyBpbmxpbmUtZmxleCB3LWZ1bGwgcm91bmRlZC1sZyBmb2N1czp6LTEwIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpib3JkZXItYmx1ZS0zMDAgZm9jdXM6cmluZyBmb2N1czpyaW5nLWJsdWUtMjAwIHt7ICRpbmRleCA+IDAgPyAnYm9yZGVyLXQgYm9yZGVyLWdyYXktMjAwIHJvdW5kZWQtdC1ub25lJyA6ICcnIH19IHt7ICEgJGxvb3AtPmxhc3QgPyAncm91bmRlZC1iLW5vbmUnIDogJycgfX0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aXJlOmNsaWNrPSIkc2V0KCdhZGRUZWFtTWVtYmVyRm9ybS5yb2xlJywgJ3t7ICRyb2xlLT5rZXkgfX0nKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ7eyBpc3NldCgkYWRkVGVhbU1lbWJlckZvcm1bJ3JvbGUnXSkgJiYgJGFkZFRlYW1NZW1iZXJGb3JtWydyb2xlJ10gIT09ICRyb2xlLT5rZXkgPyAnb3BhY2l0eS01MCcgOiAnJyB9fSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBSb2xlIE5hbWUgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleCBpdGVtcy1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LXNtIHRleHQtZ3JheS02MDAge3sgJGFkZFRlYW1NZW1iZXJGb3JtWydyb2xlJ10gPT0gJHJvbGUtPmtleSA/ICdmb250LXNlbWlib2xkJyA6ICcnIH19Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7ICRyb2xlLT5uYW1lIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGlmICgkYWRkVGVhbU1lbWJlckZvcm1bJ3JvbGUnXSA9PSAkcm9sZS0+a2V5KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0ibWwtMiBoLTUgdy01IHRleHQtZ3JlZW4tNDAwIiBmaWxsPSJub25lIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIHN0cm9rZS13aWR0aD0iMiIgc3Ryb2tlPSJjdXJyZW50Q29sb3IiIHZpZXdCb3g9IjAgMCAyNCAyNCI+PHBhdGggZD0iTTkgMTJsMiAyIDQtNG02IDJhOSA5IDAgMTEtMTggMCA5IDkgMCAwMTE4IDB6Ij48L3BhdGg+PC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBlbmRpZgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIFJvbGUgRGVzY3JpcHRpb24gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibXQtMiB0ZXh0LXhzIHRleHQtZ3JheS02MDAgdGV4dC1sZWZ0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgJHJvbGUtPmRlc2NyaXB0aW9uIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGVuZGZvcmVhY2gKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICBAZW5kaWYKICAgICAgICAgICAgICAgIDwveC1zbG90PgoKICAgICAgICAgICAgICAgIDx4LXNsb3QgbmFtZT0iYWN0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgPHgtamV0LWFjdGlvbi1tZXNzYWdlIGNsYXNzPSJtci0zIiBvbj0ic2F2ZWQiPgogICAgICAgICAgICAgICAgICAgICAgICB7eyBfXygnQWRkZWQuJykgfX0KICAgICAgICAgICAgICAgICAgICA8L3gtamV0LWFjdGlvbi1tZXNzYWdlPgoKICAgICAgICAgICAgICAgICAgICA8eC1qZXQtYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICB7eyBfXygnQWRkJykgfX0KICAgICAgICAgICAgICAgICAgICA8L3gtamV0LWJ1dHRvbj4KICAgICAgICAgICAgICAgIDwveC1zbG90PgogICAgICAgICAgICA8L3gtamV0LWZvcm0tc2VjdGlvbj4KICAgICAgICA8L2Rpdj4KICAgIEBlbmRpZgoKICAgIEBpZiAoJHRlYW0tPnRlYW1JbnZpdGF0aW9ucy0+aXNOb3RFbXB0eSgpICYmIEdhdGU6OmNoZWNrKCdhZGRUZWFtTWVtYmVyJywgJHRlYW0pKQogICAgICAgIDx4LWpldC1zZWN0aW9uLWJvcmRlciAvPgoKICAgICAgICA8IS0tIFRlYW0gTWVtYmVyIEludml0YXRpb25zIC0tPgogICAgICAgIDxkaXYgY2xhc3M9Im10LTEwIHNtOm10LTAiPgogICAgICAgICAgICA8eC1qZXQtYWN0aW9uLXNlY3Rpb24+CiAgICAgICAgICAgICAgICA8eC1zbG90IG5hbWU9InRpdGxlIj4KICAgICAgICAgICAgICAgICAgICB7eyBfXygnUGVuZGluZyBUZWFtIEludml0YXRpb25zJykgfX0KICAgICAgICAgICAgICAgIDwveC1zbG90PgoKICAgICAgICAgICAgICAgIDx4LXNsb3QgbmFtZT0iZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgICAgIHt7IF9fKCdUaGVzZSBwZW9wbGUgaGF2ZSBiZWVuIGludml0ZWQgdG8geW91ciB0ZWFtIGFuZCBoYXZlIGJlZW4gc2VudCBhbiBpbnZpdGF0aW9uIGVtYWlsLiBUaGV5IG1heSBqb2luIHRoZSB0ZWFtIGJ5IGFjY2VwdGluZyB0aGUgZW1haWwgaW52aXRhdGlvbi4nKSB9fQogICAgICAgICAgICAgICAgPC94LXNsb3Q+CgogICAgICAgICAgICAgICAgPHgtc2xvdCBuYW1lPSJjb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzcGFjZS15LTYiPgogICAgICAgICAgICAgICAgICAgICAgICBAZm9yZWFjaCAoJHRlYW0tPnRlYW1JbnZpdGF0aW9ucyBhcyAkaW52aXRhdGlvbikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1ncmF5LTYwMCI+e3sgJGludml0YXRpb24tPmVtYWlsIH19PC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXggaXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGlmIChHYXRlOjpjaGVjaygncmVtb3ZlVGVhbU1lbWJlcicsICR0ZWFtKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gQ2FuY2VsIFRlYW0gSW52aXRhdGlvbiAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImN1cnNvci1wb2ludGVyIG1sLTYgdGV4dC1zbSB0ZXh0LXJlZC01MDAgZm9jdXM6b3V0bGluZS1ub25lIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aXJlOmNsaWNrPSJjYW5jZWxUZWFtSW52aXRhdGlvbih7eyAkaW52aXRhdGlvbi0+aWQgfX0pIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBfXygnQ2FuY2VsJykgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAZW5kaWYKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICBAZW5kZm9yZWFjaAogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC94LXNsb3Q+CiAgICAgICAgICAgIDwveC1qZXQtYWN0aW9uLXNlY3Rpb24+CiAgICAgICAgPC9kaXY+CiAgICBAZW5kaWYKCiAgICBAaWYgKCR0ZWFtLT51c2Vycy0+aXNOb3RFbXB0eSgpKQogICAgICAgIDx4LWpldC1zZWN0aW9uLWJvcmRlciAvPgoKICAgICAgICA8IS0tIE1hbmFnZSBUZWFtIE1lbWJlcnMgLS0+CiAgICAgICAgPGRpdiBjbGFzcz0ibXQtMTAgc206bXQtMCI+CiAgICAgICAgICAgIDx4LWpldC1hY3Rpb24tc2VjdGlvbj4KICAgICAgICAgICAgICAgIDx4LXNsb3QgbmFtZT0idGl0bGUiPgogICAgICAgICAgICAgICAgICAgIHt7IF9fKCdUZWFtIE1lbWJlcnMnKSB9fQogICAgICAgICAgICAgICAgPC94LXNsb3Q+CgogICAgICAgICAgICAgICAgPHgtc2xvdCBuYW1lPSJkZXNjcmlwdGlvbiI+CiAgICAgICAgICAgICAgICAgICAge3sgX18oJ0FsbCBvZiB0aGUgcGVvcGxlIHRoYXQgYXJlIHBhcnQgb2YgdGhpcyB0ZWFtLicpIH19CiAgICAgICAgICAgICAgICA8L3gtc2xvdD4KCiAgICAgICAgICAgICAgICA8IS0tIFRlYW0gTWVtYmVyIExpc3QgLS0+CiAgICAgICAgICAgICAgICA8eC1zbG90IG5hbWU9ImNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNwYWNlLXktNiI+CiAgICAgICAgICAgICAgICAgICAgICAgIEBmb3JlYWNoICgkdGVhbS0+dXNlcnMtPnNvcnRCeSgnbmFtZScpIGFzICR1c2VyKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmbGV4IGl0ZW1zLWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InctOCBoLTggcm91bmRlZC1mdWxsIiBzcmM9Int7ICR1c2VyLT5wcm9maWxlX3Bob3RvX3VybCB9fSIgYWx0PSJ7eyAkdXNlci0+bmFtZSB9fSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1sLTQiPnt7ICR1c2VyLT5uYW1lIH19PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXggaXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBNYW5hZ2UgVGVhbSBNZW1iZXIgUm9sZSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGlmIChHYXRlOjpjaGVjaygnYWRkVGVhbU1lbWJlcicsICR0ZWFtKSAmJiBMYXJhdmVsXEpldHN0cmVhbVxKZXRzdHJlYW06Omhhc1JvbGVzKCkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJtbC0yIHRleHQtc20gdGV4dC1ncmF5LTQwMCB1bmRlcmxpbmUiIHdpcmU6Y2xpY2s9Im1hbmFnZVJvbGUoJ3t7ICR1c2VyLT5pZCB9fScpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBMYXJhdmVsXEpldHN0cmVhbVxKZXRzdHJlYW06OmZpbmRSb2xlKCR1c2VyLT5tZW1iZXJzaGlwLT5yb2xlKS0+bmFtZSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBlbHNlaWYgKExhcmF2ZWxcSmV0c3RyZWFtXEpldHN0cmVhbTo6aGFzUm9sZXMoKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1sLTIgdGV4dC1zbSB0ZXh0LWdyYXktNDAwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBMYXJhdmVsXEpldHN0cmVhbVxKZXRzdHJlYW06OmZpbmRSb2xlKCR1c2VyLT5tZW1iZXJzaGlwLT5yb2xlKS0+bmFtZSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBlbmRpZgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBMZWF2ZSBUZWFtIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaWYgKCR0aGlzLT51c2VyLT5pZCA9PT0gJHVzZXItPmlkKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iY3Vyc29yLXBvaW50ZXIgbWwtNiB0ZXh0LXNtIHRleHQtcmVkLTUwMCIgd2lyZTpjbGljaz0iJHRvZ2dsZSgnY29uZmlybWluZ0xlYXZpbmdUZWFtJykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IF9fKCdMZWF2ZScpIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gUmVtb3ZlIFRlYW0gTWVtYmVyIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAZWxzZWlmIChHYXRlOjpjaGVjaygncmVtb3ZlVGVhbU1lbWJlcicsICR0ZWFtKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImN1cnNvci1wb2ludGVyIG1sLTYgdGV4dC1zbSB0ZXh0LXJlZC01MDAiIHdpcmU6Y2xpY2s9ImNvbmZpcm1UZWFtTWVtYmVyUmVtb3ZhbCgne3sgJHVzZXItPmlkIH19JykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IF9fKCdSZW1vdmUnKSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBlbmRpZgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIEBlbmRmb3JlYWNoCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L3gtc2xvdD4KICAgICAgICAgICAgPC94LWpldC1hY3Rpb24tc2VjdGlvbj4KICAgICAgICA8L2Rpdj4KICAgIEBlbmRpZgoKICAgIDwhLS0gUm9sZSBNYW5hZ2VtZW50IE1vZGFsIC0tPgogICAgPHgtamV0LWRpYWxvZy1tb2RhbCB3aXJlOm1vZGVsPSJjdXJyZW50bHlNYW5hZ2luZ1JvbGUiPgogICAgICAgIDx4LXNsb3QgbmFtZT0idGl0bGUiPgogICAgICAgICAgICB7eyBfXygnTWFuYWdlIFJvbGUnKSB9fQogICAgICAgIDwveC1zbG90PgoKICAgICAgICA8eC1zbG90IG5hbWU9ImNvbnRlbnQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWxhdGl2ZSB6LTAgbXQtMSBib3JkZXIgYm9yZGVyLWdyYXktMjAwIHJvdW5kZWQtbGcgY3Vyc29yLXBvaW50ZXIiPgogICAgICAgICAgICAgICAgQGZvcmVhY2ggKCR0aGlzLT5yb2xlcyBhcyAkaW5kZXggPT4gJHJvbGUpCiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJyZWxhdGl2ZSBweC00IHB5LTMgaW5saW5lLWZsZXggdy1mdWxsIHJvdW5kZWQtbGcgZm9jdXM6ei0xMCBmb2N1czpvdXRsaW5lLW5vbmUgZm9jdXM6Ym9yZGVyLWJsdWUtMzAwIGZvY3VzOnJpbmcgZm9jdXM6cmluZy1ibHVlLTIwMCB7eyAkaW5kZXggPiAwID8gJ2JvcmRlci10IGJvcmRlci1ncmF5LTIwMCByb3VuZGVkLXQtbm9uZScgOiAnJyB9fSB7eyAhICRsb29wLT5sYXN0ID8gJ3JvdW5kZWQtYi1ub25lJyA6ICcnIH19IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aXJlOmNsaWNrPSIkc2V0KCdjdXJyZW50Um9sZScsICd7eyAkcm9sZS0+a2V5IH19JykiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ7eyAkY3VycmVudFJvbGUgIT09ICRyb2xlLT5rZXkgPyAnb3BhY2l0eS01MCcgOiAnJyB9fSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIFJvbGUgTmFtZSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXggaXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LXNtIHRleHQtZ3JheS02MDAge3sgJGN1cnJlbnRSb2xlID09ICRyb2xlLT5rZXkgPyAnZm9udC1zZW1pYm9sZCcgOiAnJyB9fSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7ICRyb2xlLT5uYW1lIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBpZiAoJGN1cnJlbnRSb2xlID09ICRyb2xlLT5rZXkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Im1sLTIgaC01IHctNSB0ZXh0LWdyZWVuLTQwMCIgZmlsbD0ibm9uZSIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiBzdHJva2Utd2lkdGg9IjIiIHN0cm9rZT0iY3VycmVudENvbG9yIiB2aWV3Qm94PSIwIDAgMjQgMjQiPjxwYXRoIGQ9Ik05IDEybDIgMiA0LTRtNiAyYTkgOSAwIDExLTE4IDAgOSA5IDAgMDExOCAweiI+PC9wYXRoPjwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBlbmRpZgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBSb2xlIERlc2NyaXB0aW9uIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibXQtMiB0ZXh0LXhzIHRleHQtZ3JheS02MDAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7ICRyb2xlLT5kZXNjcmlwdGlvbiB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgQGVuZGZvcmVhY2gKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC94LXNsb3Q+CgogICAgICAgIDx4LXNsb3QgbmFtZT0iZm9vdGVyIj4KICAgICAgICAgICAgPHgtamV0LXNlY29uZGFyeS1idXR0b24gd2lyZTpjbGljaz0ic3RvcE1hbmFnaW5nUm9sZSIgd2lyZTpsb2FkaW5nLmF0dHI9ImRpc2FibGVkIj4KICAgICAgICAgICAgICAgIHt7IF9fKCdDYW5jZWwnKSB9fQogICAgICAgICAgICA8L3gtamV0LXNlY29uZGFyeS1idXR0b24+CgogICAgICAgICAgICA8eC1qZXQtYnV0dG9uIGNsYXNzPSJtbC0zIiB3aXJlOmNsaWNrPSJ1cGRhdGVSb2xlIiB3aXJlOmxvYWRpbmcuYXR0cj0iZGlzYWJsZWQiPgogICAgICAgICAgICAgICAge3sgX18oJ1NhdmUnKSB9fQogICAgICAgICAgICA8L3gtamV0LWJ1dHRvbj4KICAgICAgICA8L3gtc2xvdD4KICAgIDwveC1qZXQtZGlhbG9nLW1vZGFsPgoKICAgIDwhLS0gTGVhdmUgVGVhbSBDb25maXJtYXRpb24gTW9kYWwgLS0+CiAgICA8eC1qZXQtY29uZmlybWF0aW9uLW1vZGFsIHdpcmU6bW9kZWw9ImNvbmZpcm1pbmdMZWF2aW5nVGVhbSI+CiAgICAgICAgPHgtc2xvdCBuYW1lPSJ0aXRsZSI+CiAgICAgICAgICAgIHt7IF9fKCdMZWF2ZSBUZWFtJykgfX0KICAgICAgICA8L3gtc2xvdD4KCiAgICAgICAgPHgtc2xvdCBuYW1lPSJjb250ZW50Ij4KICAgICAgICAgICAge3sgX18oJ0FyZSB5b3Ugc3VyZSB5b3Ugd291bGQgbGlrZSB0byBsZWF2ZSB0aGlzIHRlYW0/JykgfX0KICAgICAgICA8L3gtc2xvdD4KCiAgICAgICAgPHgtc2xvdCBuYW1lPSJmb290ZXIiPgogICAgICAgICAgICA8eC1qZXQtc2Vjb25kYXJ5LWJ1dHRvbiB3aXJlOmNsaWNrPSIkdG9nZ2xlKCdjb25maXJtaW5nTGVhdmluZ1RlYW0nKSIgd2lyZTpsb2FkaW5nLmF0dHI9ImRpc2FibGVkIj4KICAgICAgICAgICAgICAgIHt7IF9fKCdDYW5jZWwnKSB9fQogICAgICAgICAgICA8L3gtamV0LXNlY29uZGFyeS1idXR0b24+CgogICAgICAgICAgICA8eC1qZXQtZGFuZ2VyLWJ1dHRvbiBjbGFzcz0ibWwtMyIgd2lyZTpjbGljaz0ibGVhdmVUZWFtIiB3aXJlOmxvYWRpbmcuYXR0cj0iZGlzYWJsZWQiPgogICAgICAgICAgICAgICAge3sgX18oJ0xlYXZlJykgfX0KICAgICAgICAgICAgPC94LWpldC1kYW5nZXItYnV0dG9uPgogICAgICAgIDwveC1zbG90PgogICAgPC94LWpldC1jb25maXJtYXRpb24tbW9kYWw+CgogICAgPCEtLSBSZW1vdmUgVGVhbSBNZW1iZXIgQ29uZmlybWF0aW9uIE1vZGFsIC0tPgogICAgPHgtamV0LWNvbmZpcm1hdGlvbi1tb2RhbCB3aXJlOm1vZGVsPSJjb25maXJtaW5nVGVhbU1lbWJlclJlbW92YWwiPgogICAgICAgIDx4LXNsb3QgbmFtZT0idGl0bGUiPgogICAgICAgICAgICB7eyBfXygnUmVtb3ZlIFRlYW0gTWVtYmVyJykgfX0KICAgICAgICA8L3gtc2xvdD4KCiAgICAgICAgPHgtc2xvdCBuYW1lPSJjb250ZW50Ij4KICAgICAgICAgICAge3sgX18oJ0FyZSB5b3Ugc3VyZSB5b3Ugd291bGQgbGlrZSB0byByZW1vdmUgdGhpcyBwZXJzb24gZnJvbSB0aGUgdGVhbT8nKSB9fQogICAgICAgIDwveC1zbG90PgoKICAgICAgICA8eC1zbG90IG5hbWU9ImZvb3RlciI+CiAgICAgICAgICAgIDx4LWpldC1zZWNvbmRhcnktYnV0dG9uIHdpcmU6Y2xpY2s9IiR0b2dnbGUoJ2NvbmZpcm1pbmdUZWFtTWVtYmVyUmVtb3ZhbCcpIiB3aXJlOmxvYWRpbmcuYXR0cj0iZGlzYWJsZWQiPgogICAgICAgICAgICAgICAge3sgX18oJ0NhbmNlbCcpIH19CiAgICAgICAgICAgIDwveC1qZXQtc2Vjb25kYXJ5LWJ1dHRvbj4KCiAgICAgICAgICAgIDx4LWpldC1kYW5nZXItYnV0dG9uIGNsYXNzPSJtbC0zIiB3aXJlOmNsaWNrPSJyZW1vdmVUZWFtTWVtYmVyIiB3aXJlOmxvYWRpbmcuYXR0cj0iZGlzYWJsZWQiPgogICAgICAgICAgICAgICAge3sgX18oJ1JlbW92ZScpIH19CiAgICAgICAgICAgIDwveC1qZXQtZGFuZ2VyLWJ1dHRvbj4KICAgICAgICA8L3gtc2xvdD4KICAgIDwveC1qZXQtY29uZmlybWF0aW9uLW1vZGFsPgo8L2Rpdj4KIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";