1685309932
waR3U4bTeM%3A5dcd8854f782ef4d07c0828bebf001a4-c8c3237afec955dbe5b71933613b135f
s:7888:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImM4YzMyMzdhZmVjOTU1ZGJlNWI3MTkzMzYxM2IxMzVmIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6NDQ6ImxvZ291dC1vdGhlci1icm93c2VyLXNlc3Npb25zLWZvcm0uYmxhZGUucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTA4OiJ2ZW5kb3IvbGFyYXZlbC9qZXRzdHJlYW0vc3R1YnMvbGl2ZXdpcmUvcmVzb3VyY2VzL3ZpZXdzL3Byb2ZpbGUvbG9nb3V0LW90aGVyLWJyb3dzZXItc2Vzc2lvbnMtZm9ybS5ibGFkZS5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjQ4OTQ6Ijx4LWpldC1hY3Rpb24tc2VjdGlvbj4KICAgIDx4LXNsb3QgbmFtZT0idGl0bGUiPgogICAgICAgIHt7IF9fKCdCcm93c2VyIFNlc3Npb25zJykgfX0KICAgIDwveC1zbG90PgoKICAgIDx4LXNsb3QgbmFtZT0iZGVzY3JpcHRpb24iPgogICAgICAgIHt7IF9fKCdNYW5hZ2UgYW5kIGxvZyBvdXQgeW91ciBhY3RpdmUgc2Vzc2lvbnMgb24gb3RoZXIgYnJvd3NlcnMgYW5kIGRldmljZXMuJykgfX0KICAgIDwveC1zbG90PgoKICAgIDx4LXNsb3QgbmFtZT0iY29udGVudCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibWF4LXcteGwgdGV4dC1zbSB0ZXh0LWdyYXktNjAwIj4KICAgICAgICAgICAge3sgX18oJ0lmIG5lY2Vzc2FyeSwgeW91IG1heSBsb2cgb3V0IG9mIGFsbCBvZiB5b3VyIG90aGVyIGJyb3dzZXIgc2Vzc2lvbnMgYWNyb3NzIGFsbCBvZiB5b3VyIGRldmljZXMuIFNvbWUgb2YgeW91ciByZWNlbnQgc2Vzc2lvbnMgYXJlIGxpc3RlZCBiZWxvdzsgaG93ZXZlciwgdGhpcyBsaXN0IG1heSBub3QgYmUgZXhoYXVzdGl2ZS4gSWYgeW91IGZlZWwgeW91ciBhY2NvdW50IGhhcyBiZWVuIGNvbXByb21pc2VkLCB5b3Ugc2hvdWxkIGFsc28gdXBkYXRlIHlvdXIgcGFzc3dvcmQuJykgfX0KICAgICAgICA8L2Rpdj4KCiAgICAgICAgQGlmIChjb3VudCgkdGhpcy0+c2Vzc2lvbnMpID4gMCkKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibXQtNSBzcGFjZS15LTYiPgogICAgICAgICAgICAgICAgPCEtLSBPdGhlciBCcm93c2VyIFNlc3Npb25zIC0tPgogICAgICAgICAgICAgICAgQGZvcmVhY2ggKCR0aGlzLT5zZXNzaW9ucyBhcyAkc2Vzc2lvbikKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmbGV4IGl0ZW1zLWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaWYgKCRzZXNzaW9uLT5hZ2VudC0+aXNEZXNrdG9wKCkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBmaWxsPSJub25lIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIHN0cm9rZS13aWR0aD0iMiIgdmlld0JveD0iMCAwIDI0IDI0IiBzdHJva2U9ImN1cnJlbnRDb2xvciIgY2xhc3M9InctOCBoLTggdGV4dC1ncmF5LTUwMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik05Ljc1IDE3TDkgMjBsLTEgMWg4bC0xLTEtLjc1LTNNMyAxM2gxOE01IDE3aDE0YTIgMiAwIDAwMi0yVjVhMiAyIDAgMDAtMi0ySDVhMiAyIDAgMDAtMiAydjEwYTIgMiAwIDAwMiAyeiI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgQGVsc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDI0IDI0IiBzdHJva2Utd2lkdGg9IjIiIHN0cm9rZT0iY3VycmVudENvbG9yIiBmaWxsPSJub25lIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIGNsYXNzPSJ3LTggaC04IHRleHQtZ3JheS01MDAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMCAwaDI0djI0SDB6IiBzdHJva2U9Im5vbmUiPjwvcGF0aD48cmVjdCB4PSI3IiB5PSI0IiB3aWR0aD0iMTAiIGhlaWdodD0iMTYiIHJ4PSIxIj48L3JlY3Q+PHBhdGggZD0iTTExIDVoMk0xMiAxN3YuMDEiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBlbmRpZgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1sLTMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1zbSB0ZXh0LWdyYXktNjAwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyAkc2Vzc2lvbi0+YWdlbnQtPnBsYXRmb3JtKCkgPyAkc2Vzc2lvbi0+YWdlbnQtPnBsYXRmb3JtKCkgOiAnVW5rbm93bicgfX0gLSB7eyAkc2Vzc2lvbi0+YWdlbnQtPmJyb3dzZXIoKSA/ICRzZXNzaW9uLT5hZ2VudC0+YnJvd3NlcigpIDogJ1Vua25vd24nIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQteHMgdGV4dC1ncmF5LTUwMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7ICRzZXNzaW9uLT5pcF9hZGRyZXNzIH19LAoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGlmICgkc2Vzc2lvbi0+aXNfY3VycmVudF9kZXZpY2UpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1ncmVlbi01MDAgZm9udC1zZW1pYm9sZCI+e3sgX18oJ1RoaXMgZGV2aWNlJykgfX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBlbHNlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBfXygnTGFzdCBhY3RpdmUnKSB9fSB7eyAkc2Vzc2lvbi0+bGFzdF9hY3RpdmUgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGVuZGlmCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICBAZW5kZm9yZWFjaAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICBAZW5kaWYKCiAgICAgICAgPGRpdiBjbGFzcz0iZmxleCBpdGVtcy1jZW50ZXIgbXQtNSI+CiAgICAgICAgICAgIDx4LWpldC1idXR0b24gd2lyZTpjbGljaz0iY29uZmlybUxvZ291dCIgd2lyZTpsb2FkaW5nLmF0dHI9ImRpc2FibGVkIj4KICAgICAgICAgICAgICAgIHt7IF9fKCdMb2cgT3V0IE90aGVyIEJyb3dzZXIgU2Vzc2lvbnMnKSB9fQogICAgICAgICAgICA8L3gtamV0LWJ1dHRvbj4KCiAgICAgICAgICAgIDx4LWpldC1hY3Rpb24tbWVzc2FnZSBjbGFzcz0ibWwtMyIgb249ImxvZ2dlZE91dCI+CiAgICAgICAgICAgICAgICB7eyBfXygnRG9uZS4nKSB9fQogICAgICAgICAgICA8L3gtamV0LWFjdGlvbi1tZXNzYWdlPgogICAgICAgIDwvZGl2PgoKICAgICAgICA8IS0tIExvZyBPdXQgT3RoZXIgRGV2aWNlcyBDb25maXJtYXRpb24gTW9kYWwgLS0+CiAgICAgICAgPHgtamV0LWRpYWxvZy1tb2RhbCB3aXJlOm1vZGVsPSJjb25maXJtaW5nTG9nb3V0Ij4KICAgICAgICAgICAgPHgtc2xvdCBuYW1lPSJ0aXRsZSI+CiAgICAgICAgICAgICAgICB7eyBfXygnTG9nIE91dCBPdGhlciBCcm93c2VyIFNlc3Npb25zJykgfX0KICAgICAgICAgICAgPC94LXNsb3Q+CgogICAgICAgICAgICA8eC1zbG90IG5hbWU9ImNvbnRlbnQiPgogICAgICAgICAgICAgICAge3sgX18oJ1BsZWFzZSBlbnRlciB5b3VyIHBhc3N3b3JkIHRvIGNvbmZpcm0geW91IHdvdWxkIGxpa2UgdG8gbG9nIG91dCBvZiB5b3VyIG90aGVyIGJyb3dzZXIgc2Vzc2lvbnMgYWNyb3NzIGFsbCBvZiB5b3VyIGRldmljZXMuJykgfX0KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtdC00IiB4LWRhdGE9Int9IiB4LW9uOmNvbmZpcm1pbmctbG9nb3V0LW90aGVyLWJyb3dzZXItc2Vzc2lvbnMud2luZG93PSJzZXRUaW1lb3V0KCgpID0+ICRyZWZzLnBhc3N3b3JkLmZvY3VzKCksIDI1MCkiPgogICAgICAgICAgICAgICAgICAgIDx4LWpldC1pbnB1dCB0eXBlPSJwYXNzd29yZCIgY2xhc3M9Im10LTEgYmxvY2sgdy0zLzQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9Int7IF9fKCdQYXNzd29yZCcpIH19IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHgtcmVmPSJwYXNzd29yZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aXJlOm1vZGVsLmRlZmVyPSJwYXNzd29yZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aXJlOmtleWRvd24uZW50ZXI9ImxvZ291dE90aGVyQnJvd3NlclNlc3Npb25zIiAvPgoKICAgICAgICAgICAgICAgICAgICA8eC1qZXQtaW5wdXQtZXJyb3IgZm9yPSJwYXNzd29yZCIgY2xhc3M9Im10LTIiIC8+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC94LXNsb3Q+CgogICAgICAgICAgICA8eC1zbG90IG5hbWU9ImZvb3RlciI+CiAgICAgICAgICAgICAgICA8eC1qZXQtc2Vjb25kYXJ5LWJ1dHRvbiB3aXJlOmNsaWNrPSIkdG9nZ2xlKCdjb25maXJtaW5nTG9nb3V0JykiIHdpcmU6bG9hZGluZy5hdHRyPSJkaXNhYmxlZCI+CiAgICAgICAgICAgICAgICAgICAge3sgX18oJ0NhbmNlbCcpIH19CiAgICAgICAgICAgICAgICA8L3gtamV0LXNlY29uZGFyeS1idXR0b24+CgogICAgICAgICAgICAgICAgPHgtamV0LWJ1dHRvbiBjbGFzcz0ibWwtMyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpcmU6Y2xpY2s9ImxvZ291dE90aGVyQnJvd3NlclNlc3Npb25zIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lyZTpsb2FkaW5nLmF0dHI9ImRpc2FibGVkIj4KICAgICAgICAgICAgICAgICAgICB7eyBfXygnTG9nIE91dCBPdGhlciBCcm93c2VyIFNlc3Npb25zJykgfX0KICAgICAgICAgICAgICAgIDwveC1qZXQtYnV0dG9uPgogICAgICAgICAgICA8L3gtc2xvdD4KICAgICAgICA8L3gtamV0LWRpYWxvZy1tb2RhbD4KICAgIDwveC1zbG90Pgo8L3gtamV0LWFjdGlvbi1zZWN0aW9uPgoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";