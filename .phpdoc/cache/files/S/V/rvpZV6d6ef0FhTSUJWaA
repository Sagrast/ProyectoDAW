1685309927
waR3U4bTeM%3Adda411aa517f81bfd89f0fc1d51fdf16-6c0cf9c3f444a6f8fc9e21bac609d2c6
s:7940:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjZjMGNmOWMzZjQ0NGE2ZjhmYzllMjFiYWM2MDlkMmM2IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTg6Im5ld3NFZGl0LmJsYWRlLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjQ0OiJyZXNvdXJjZXMvdmlld3Mvd2ViL2FkbWluL25ld3NFZGl0LmJsYWRlLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6NTAyMzoie3stLSBTb3VyY2U6IDxhIGNsYXNzPSJ1bmRlcmxpbmUiIGhyZWY9Imh0dHBzOi8vdGFpbHdpbmRjb21wb25lbnRzLmNvbS9jb21wb25lbnQvdGFibGUiPmh0dHBzOi8vdGFpbHdpbmRjb21wb25lbnRzLmNvbS9jb21wb25lbnQvdGFibGU8L2E+IC0tfX0KCnt7LS0gTGlzdGFkbyBkZSB0b2RvcyBsb3Mgbm9kb3MgeSBsb3MgYm90b25lcyBxdWUgbGxldmFuIGFsIGJvcnJhZG8gbyBsYSBlZGljaW9uICAtLX19Cjx4LWFwcC1sYXlvdXQ+CiAgICA8eC1zbG90IG5hbWU9ImhlYWRlciI+CiAgICAgICAgPGgyIGNsYXNzPSJmb250LXNlbWlib2xkIHRleHQteGwgdGV4dC1ncmF5LTgwMCBsZWFkaW5nLXRpZ2h0Ij4KICAgICAgICAgICAge3sgX18oJ0xpc3RhZG8gZGUgTm90aWNpYXMnKSB9fQogICAgICAgIDwvaDI+CiAgICA8L3gtc2xvdD4KICAgIDxkaXYgY2xhc3M9Im1heC13LTd4bCBteC1hdXRvIHB5LTYgcHgtNCBzbTpweC02IGxnOnB4LTggcHktOCBjYXBpdGFsaXplIj4KICAgICAgICA8ZGl2IGNsYXNzPSJ3LWZ1bGwgbXQtMTIiPgogICAgICAgICAgICA8Zm9ybSBhY3Rpb249Int7IHJvdXRlKCd3ZWIuYWRtaW4ubGlzdCcpIH19IiBtZXRob2Q9InBvc3QiPgogICAgICAgICAgICAgICAgQGNzcmYKICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InRpdGxlIj5CdXNjYXIgVGl0dWxvPC9sYWJlbD4KICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgY2xhc3M9ImZvY3VzOmJvcmRlci1ibHVlLTYwMCBhcHBlYXJhbmNlLW5vbmUgYmxvY2sgdy0xLzQgYmctd2hpdGUgdGV4dC1ibGFjayBib3JkZXIgIHJvdW5kZWQgcHktMyBweC00IG1iLTMgbGVhZGluZy10aWdodCBmb2N1czpvdXRsaW5lLW5vbmUgZm9jdXM6Ymctd2hpdGUiCiAgICAgICAgICAgICAgICBuYW1lPSJ0aXR1bG8iIGlkPSJ0aXR1bG8iIHBsYWNlaG9sZGVyPSJJbnRyb2R1Y2UgdGl0dWxvIiB0eXBlPSJ0ZXh0Ij4KICAgICAgICAgICAgPGJyLz4KICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbmxpbmUtYmxvY2sgcHgtNiBweS0yLjUgYmctYmx1ZS00MDAgdGV4dC13aGl0ZSBmb250LW1lZGl1bSB0ZXh0LXhzIGxlYWRpbmctdGlnaHQgdXBwZXJjYXNlIHJvdW5kZWQgc2hhZG93LW1kIGhvdmVyOmJnLWJsdWUtNTAwIGhvdmVyOnNoYWRvdy1sZyBmb2N1czpiZy1ibHVlLTUwMCBmb2N1czpzaGFkb3ctbGcgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOnJpbmctMCBhY3RpdmU6YmctYmx1ZS02MDAgYWN0aXZlOnNoYWRvdy1sZyB0cmFuc2l0aW9uIGR1cmF0aW9uLTE1MCBlYXNlLWluLW91dCI+e3sgX18oJ0ZpbHRyYXInKSB9fTwvYnV0dG9uPgogICAgICAgICAgICAgICAgPGEgaHJlZj0ie3sgcm91dGUoJ3dlYi5hZG1pbi5saXN0JykgfX0iPgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW5saW5lLWJsb2NrIHB4LTYgcHktMi41IGJnLWJsdWUtNDAwIHRleHQtd2hpdGUgZm9udC1tZWRpdW0gdGV4dC14cyBsZWFkaW5nLXRpZ2h0IHVwcGVyY2FzZSByb3VuZGVkIHNoYWRvdy1tZCBob3ZlcjpiZy1ibHVlLTUwMCBob3ZlcjpzaGFkb3ctbGcgZm9jdXM6YmctYmx1ZS01MDAgZm9jdXM6c2hhZG93LWxnIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nLTAgYWN0aXZlOmJnLWJsdWUtNjAwIGFjdGl2ZTpzaGFkb3ctbGcgdHJhbnNpdGlvbiBkdXJhdGlvbi0xNTAgZWFzZS1pbi1vdXQiPiB7eyBfXygnVmVyVG9kb3MnKSB9fTwvYnV0dG9uPgogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LXhsIHBiLTMgZmxleCBpdGVtcy1jZW50ZXIiPgogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1saXN0IG1yLTMiPjwvaT4ge3sgX18oJ05vdGljaWFzJykgfX0KICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJiZy13aGl0ZSBvdmVyZmxvdy1hdXRvIj4KICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0idGV4dC1sZWZ0IHctZnVsbCBib3JkZXItY29sbGFwc2UiPgogICAgICAgICAgICAgICAgICAgIDwhLS1Cb3JkZXIgY29sbGFwc2UgZG9lc24ndCB3b3JrIG9uIHRoaXMgc2l0ZSB5ZXQgYnV0IGl0J3MgYXZhaWxhYmxlIGluIG5ld2VyIHRhaWx3aW5kIHZlcnNpb25zIC0tPgogICAgICAgICAgICAgICAgICAgIDx0aGVhZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InB5LTQgcHgtNiBiZy1ncmV5LWxpZ2h0ZXN0IGZvbnQtYm9sZCB1cHBlcmNhc2UgdGV4dC1zbSB0ZXh0LWdyZXktZGFyayBib3JkZXItYiBib3JkZXItZ3JleS1saWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgX18oJ1Bob3RvJykgfX08L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InB5LTQgcHgtNiBiZy1ncmV5LWxpZ2h0ZXN0IGZvbnQtYm9sZCB1cHBlcmNhc2UgdGV4dC1zbSB0ZXh0LWdyZXktZGFyayBib3JkZXItYiBib3JkZXItZ3JleS1saWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgX18oJ1RpdHVsbycpIH19PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJweS00IHB4LTYgYmctZ3JleS1saWdodGVzdCBmb250LWJvbGQgdXBwZXJjYXNlIHRleHQtc20gdGV4dC1ncmV5LWRhcmsgYm9yZGVyLWIgYm9yZGVyLWdyZXktbGlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IF9fKCdFZGl0JykgfX08L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InB5LTQgcHgtNiBiZy1ncmV5LWxpZ2h0ZXN0IGZvbnQtYm9sZCB1cHBlcmNhc2UgdGV4dC1zbSB0ZXh0LWdyZXktZGFyayBib3JkZXItYiBib3JkZXItZ3JleS1saWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgX18oJ0RlbGV0ZScpIH19PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgICAgICAgIDx0Ym9keT4KCiAgICAgICAgICAgICAgICAgICAgICAgIHt7LS0gQnVjbGUgcXVlIHJlY29ycmUgdG9kb3MgbG9zIG9iamV0b3MgcmVjaWJpZG9zIGRlbCBjb250cm9sYWRvciB5IGxvcyBtdWVzdHJhIGVuIHVuYSB0YWJsYSAtLX19CiAgICAgICAgICAgICAgICAgICAgICAgIEBmb3JlYWNoICgkbm9kb3MgYXMgJHBvc3QpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHIgY2xhc3M9ImhvdmVyOmJnLWdyZXktbGlnaHRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJweS00IHB4LTYgYm9yZGVyLWIgYm9yZGVyLWdyZXktbGlnaHQiPjxpbWcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iL2ltZy9wb3N0L3t7ICRwb3N0LT5pbWcgfX0iIGNsYXNzPSJvYmplY3Qtc2NhbGUtZG93biBoLTEyIHctMTIiPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJweS00IHB4LTYgYm9yZGVyLWIgYm9yZGVyLWdyZXktbGlnaHQiPnt7ICRwb3N0LT50aXR1bG8gfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0icHktNCBweC02IGJvcmRlci1iIGJvcmRlci1ncmV5LWxpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0ie3sgcm91dGUoJ3dlYi5ub2Rvcy5lZGl0JywgJHBvc3QtPmlkKSB9fSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImJnLWJsdWUtNTAwIGhvdmVyOmJnLWJsdWUtNzAwIHRleHQtd2hpdGUgZm9udC1ib2xkIHB5LTIgcHgtNCBib3JkZXIgYm9yZGVyLWJsdWUtNzAwIHJvdW5kZWQiPkVkaXRhcjwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InB5LTQgcHgtNiBib3JkZXItYiBib3JkZXItZ3JleS1saWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Int7IHJvdXRlKCd3ZWIubm9kb3MuZGVzdHJveScsICRwb3N0LT5pZCkgfX0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJiZy1yZWQtNTAwIGhvdmVyOmJnLXJlZC03MDAgdGV4dC1ibGFjayBmb250LWJvbGQgcHktMiBweC00IGJvcmRlciBib3JkZXItcmVkLTcwMCByb3VuZGVkIj5Cb3JyYXI8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICBAZW5kZm9yZWFjaAogICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZm9udC1ib2xkIj57eyBzZXNzaW9uKCdzdGF0dXMnKSB9fTwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKPC94LWFwcC1sYXlvdXQ+CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";