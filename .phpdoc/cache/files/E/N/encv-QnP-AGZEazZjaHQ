1685309927
waR3U4bTeM%3A8eea66ff5427ccf5bde099e7a9cf391f-685efcc0cc0835ed93c7d888e3c849b5
s:5860:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjY4NWVmY2MwY2MwODM1ZWQ5M2M3ZDg4OGUzYzg0OWI1IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6NDE6InVwZGF0ZS1wcm9maWxlLWluZm9ybWF0aW9uLWZvcm0uYmxhZGUucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6NjU6InJlc291cmNlcy92aWV3cy9wcm9maWxlL3VwZGF0ZS1wcm9maWxlLWluZm9ybWF0aW9uLWZvcm0uYmxhZGUucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czozNDE5OiI8eC1qZXQtZm9ybS1zZWN0aW9uIHN1Ym1pdD0idXBkYXRlUHJvZmlsZUluZm9ybWF0aW9uIj4KICAgIDx4LXNsb3QgbmFtZT0idGl0bGUiPgogICAgICAgIHt7IF9fKCdQcm9maWxlIEluZm9ybWF0aW9uJykgfX0KICAgIDwveC1zbG90PgoKICAgIDx4LXNsb3QgbmFtZT0iZGVzY3JpcHRpb24iPgogICAgICAgIHt7IF9fKCdVcGRhdGUgeW91ciBhY2NvdW50XCdzIHByb2ZpbGUgaW5mb3JtYXRpb24gYW5kIGVtYWlsIGFkZHJlc3MuJykgfX0KICAgIDwveC1zbG90PgoKICAgIDx4LXNsb3QgbmFtZT0iZm9ybSI+CiAgICAgICAgPCEtLSBQcm9maWxlIFBob3RvIC0tPgogICAgICAgIEBpZiAoTGFyYXZlbFxKZXRzdHJlYW1cSmV0c3RyZWFtOjptYW5hZ2VzUHJvZmlsZVBob3RvcygpKQogICAgICAgICAgICA8ZGl2IHgtZGF0YT0ie3Bob3RvTmFtZTogbnVsbCwgcGhvdG9QcmV2aWV3OiBudWxsfSIgY2xhc3M9ImNvbC1zcGFuLTYgc206Y29sLXNwYW4tNCI+CiAgICAgICAgICAgICAgICA8IS0tIFByb2ZpbGUgUGhvdG8gRmlsZSBJbnB1dCAtLT4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJmaWxlIiBjbGFzcz0iaGlkZGVuIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lyZTptb2RlbD0icGhvdG8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB4LXJlZj0icGhvdG8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB4LW9uOmNoYW5nZT0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBob3RvTmFtZSA9ICRyZWZzLnBob3RvLmZpbGVzWzBdLm5hbWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGhvdG9QcmV2aWV3ID0gZS50YXJnZXQucmVzdWx0OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTCgkcmVmcy5waG90by5maWxlc1swXSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiIC8+CgogICAgICAgICAgICAgICAgPHgtamV0LWxhYmVsIGZvcj0icGhvdG8iIHZhbHVlPSJ7eyBfXygnUGhvdG8nKSB9fSIgLz4KCiAgICAgICAgICAgICAgICA8IS0tIEN1cnJlbnQgUHJvZmlsZSBQaG90byAtLT4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im10LTIiIHgtc2hvdz0iISBwaG90b1ByZXZpZXciPgogICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJ7eyAkdGhpcy0+dXNlci0+cHJvZmlsZV9waG90b191cmwgfX0iIGFsdD0ie3sgJHRoaXMtPnVzZXItPm5hbWUgfX0iIGNsYXNzPSJyb3VuZGVkLWZ1bGwgaC0yMCB3LTIwIG9iamVjdC1jb3ZlciI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8IS0tIE5ldyBQcm9maWxlIFBob3RvIFByZXZpZXcgLS0+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtdC0yIiB4LXNob3c9InBob3RvUHJldmlldyIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmxvY2sgcm91bmRlZC1mdWxsIHctMjAgaC0yMCBiZy1jb3ZlciBiZy1uby1yZXBlYXQgYmctY2VudGVyIgogICAgICAgICAgICAgICAgICAgICAgICAgIHgtYmluZDpzdHlsZT0iJ2JhY2tncm91bmQtaW1hZ2U6IHVybChcJycgKyBwaG90b1ByZXZpZXcgKyAnXCcpOyciPgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDx4LWpldC1zZWNvbmRhcnktYnV0dG9uIGNsYXNzPSJtdC0yIG1yLTIiIHR5cGU9ImJ1dHRvbiIgeC1vbjpjbGljay5wcmV2ZW50PSIkcmVmcy5waG90by5jbGljaygpIj4KICAgICAgICAgICAgICAgICAgICB7eyBfXygnU2VsZWN0IEEgTmV3IFBob3RvJykgfX0KICAgICAgICAgICAgICAgIDwveC1qZXQtc2Vjb25kYXJ5LWJ1dHRvbj4KCiAgICAgICAgICAgICAgICBAaWYgKCR0aGlzLT51c2VyLT5wcm9maWxlX3Bob3RvX3BhdGgpCiAgICAgICAgICAgICAgICAgICAgPHgtamV0LXNlY29uZGFyeS1idXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0ibXQtMiIgd2lyZTpjbGljaz0iZGVsZXRlUHJvZmlsZVBob3RvIj4KICAgICAgICAgICAgICAgICAgICAgICAge3sgX18oJ1JlbW92ZSBQaG90bycpIH19CiAgICAgICAgICAgICAgICAgICAgPC94LWpldC1zZWNvbmRhcnktYnV0dG9uPgogICAgICAgICAgICAgICAgQGVuZGlmCgogICAgICAgICAgICAgICAgPHgtamV0LWlucHV0LWVycm9yIGZvcj0icGhvdG8iIGNsYXNzPSJtdC0yIiAvPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICBAZW5kaWYKCiAgICAgICAgPCEtLSBOYW1lIC0tPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTYgc206Y29sLXNwYW4tNCI+CiAgICAgICAgICAgIDx4LWpldC1sYWJlbCBmb3I9Im5hbWUiIHZhbHVlPSJ7eyBfXygnTmFtZScpIH19IiAvPgogICAgICAgICAgICA8eC1qZXQtaW5wdXQgaWQ9Im5hbWUiIHR5cGU9InRleHQiIGNsYXNzPSJtdC0xIGJsb2NrIHctZnVsbCIgd2lyZTptb2RlbC5kZWZlcj0ic3RhdGUubmFtZSIgYXV0b2NvbXBsZXRlPSJuYW1lIiAvPgogICAgICAgICAgICA8eC1qZXQtaW5wdXQtZXJyb3IgZm9yPSJuYW1lIiBjbGFzcz0ibXQtMiIgLz4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPCEtLSBFbWFpbCAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi02IHNtOmNvbC1zcGFuLTQiPgogICAgICAgICAgICA8eC1qZXQtbGFiZWwgZm9yPSJlbWFpbCIgdmFsdWU9Int7IF9fKCdFbWFpbCcpIH19IiAvPgogICAgICAgICAgICA8eC1qZXQtaW5wdXQgaWQ9ImVtYWlsIiB0eXBlPSJlbWFpbCIgY2xhc3M9Im10LTEgYmxvY2sgdy1mdWxsIiB3aXJlOm1vZGVsLmRlZmVyPSJzdGF0ZS5lbWFpbCIgLz4KICAgICAgICAgICAgPHgtamV0LWlucHV0LWVycm9yIGZvcj0iZW1haWwiIGNsYXNzPSJtdC0yIiAvPgogICAgICAgIDwvZGl2PgogICAgPC94LXNsb3Q+CgogICAgPHgtc2xvdCBuYW1lPSJhY3Rpb25zIj4KICAgICAgICA8eC1qZXQtYWN0aW9uLW1lc3NhZ2UgY2xhc3M9Im1yLTMiIG9uPSJzYXZlZCI+CiAgICAgICAgICAgIHt7IF9fKCdTYXZlZC4nKSB9fQogICAgICAgIDwveC1qZXQtYWN0aW9uLW1lc3NhZ2U+CgogICAgICAgIDx4LWpldC1idXR0b24gd2lyZTpsb2FkaW5nLmF0dHI9ImRpc2FibGVkIiB3aXJlOnRhcmdldD0icGhvdG8iPgogICAgICAgICAgICB7eyBfXygnU2F2ZScpIH19CiAgICAgICAgPC94LWpldC1idXR0b24+CiAgICA8L3gtc2xvdD4KPC94LWpldC1mb3JtLXNlY3Rpb24+CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";